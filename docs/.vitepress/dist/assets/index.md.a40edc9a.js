import{_ as t,o as e,c as a}from"./chunks/framework.bedf30b3.js";const m=JSON.parse('{"title":"KsgEcharts","titleTemplate":"KsgEcharts","description":"","frontmatter":{"layout":"home","title":"KsgEcharts","titleTemplate":"KsgEcharts","hero":{"name":"KsgEcharts","tagline":"KsgEcharts 是基于 Vue3 与 ECharts5 构建封装的组件库，提供高可配置化、简捷、高效地构建图表组件化方案。","image":{"src":"/logo.svg","alt":"KsgEcharts"},"actions":[{"theme":"brand","text":"Get Started","link":"/guide/"},{"theme":"alt","text":"Learn More","link":"/guide/"}]},"features":[{"icon":"⚡️","title":"提高开发效率","details":"通过二次封装,开发者可以快速构建出适合自身业务需求的图表组件,无需每次都从头开始编写echarts的配置项,大大提高了开发效率."},{"icon":"💡","title":"统一组件风格","details":"二次封装可以对echarts的默认配置进行统一设置,如字体、颜色、交互等,使得整个系统中的图表组件保持一致的视觉风格."},{"icon":"🛠️","title":"增强可维护性","details":"将echarts的配置和业务逻辑分离,封装成可复用的组件,有利于代码的组织和维护。当需求发生变化时,只需修改封装好的组件,而不会影响到其他使用该组件的地方."},{"icon":"🔑","title":"提升开发体验","details":"通过二次封装,开发者可以暴露出更加贴近业务的API,减少使用者需要了解echarts内部实现的负担,提升了整体的开发体验."}]},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":1719504106000}'),s={name:"index.md"};function r(i,c,n,l,o,d){return e(),a("div")}const g=t(s,[["render",r]]);export{m as __pageData,g as default};
